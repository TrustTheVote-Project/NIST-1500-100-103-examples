* Scenario
  In order to see how all these pieces fit together, let's go through
  an example.

  It is spring in Gadget County, in the state of Farallon, and
  county officials are preparing for an upcoming election. There are
  three contests to be decided: the mayor of Orbit City, the members
  of the Spaceport control board, and a ballot question to determine
  whether the County should raise taxes to pay for expanded
  air-traffic control at the county airport.

  Gadget County is small.  It has only four voting precincts: the
  community of Bedrock; the community of Spacetown; and two precincts
  in Orbit City, the downtown precinct and the spaceport precinct.

  There are two candidates for mayor of Orbit City: Cosmo Spacely, the
  incumbent, who is running as a member of the Lepton Party, and
  Spencer Cogswell, of the Hadron Party.  The Mayor is elected every
  two years.

  The Spaceport Control Board has four members, each of whom serves
  for four years.  The terms are staggered: two board members are
  elected every two years.  This year, there are three candidates for
  the two open slots: Jane Jetson, Harlan Ellis, and Rudi Indexer.

  Fred Flintstone, the county clerk, is in charge of maintaining the
  data for the county's elections.  He uses the Versa Election Data
  Manager for this purpose.  Versa already has data about the
  geopolitical units -- the county and the precincts -- and about the
  political offices (Mayor and Control Board):

  | id             | unit_type    | unit_name          |
  |----------------+--------------+--------------------|
  | county_15      | county       | Gadget County      |
  | precinct_1     | precinct     | Bedrock Precinct   |
  | precinct_2     | precinct     | Downtown Precinct  |
  | precinct_3     | precinct     | Port Precinct      |
  | precinct_4     | precinct     | Spacetown Precinct |
  | municipality_1 | municipality | Orbit City         |

  Versa is a sophisticated election-data-management system; for this
  example we're only showing some of the data it keeps.  And we're
  summarizing it in data tables: you shouldn't assume Versa actually
  stores or manages data this way.  Versa's data model is that of
  NIST_1500-100, which specifies a common data format (CDF) for
  describing elections.  Using NIST's CDF, the data about a precinct
  might look like this:

  #+begin_src xml
    <GpUnit xsi:type="ReportingUnit" ObjectId="county_15">
        <Name>
            <Text Language="en">Gadget County</Text>
        </Name>
        <ComposingGpUnitIds>municipality_1</ComposingGpUnitIds>
        <Type>county</Type>
    </GpUnit>
  #+end_src

  Don't be thrown by the XML, though: that's just a /serialization
  format/.  NIST provides two official serialization formats: XML and
  JSON.  The JSON might look like this:

  #+begin_src json
    { "ObjectId":"county_15",
      "Name": { "Text": "Gadget County" },
      "ComposingUnitIds": ["municipality_1"]
    }
  #+end_src

  (TODO: ask EJS about representing n-of-m contests)

  | id       | office_name          | election_district | term (in years) |
  |----------+----------------------+-------------------+-----------------|
  | office_1 | Mayor of Orbit City  | municipality_1    |               4 |
  | office_2 | Control Board Member | municipality_1    |               4 |
  | office_3 | Control Board Member | municipality_1    |               4 |
  | office_4 | Control Board Member | municipality_1    |               4 |
  | office_5 | Control Board Member | municipality_1    |               4 |
  |          |                      |                   |                 |

  Fred begins by creating the contests.
  
  | id        | contest_type   | name                     | office         | vote_variation |
  |-----------+----------------+--------------------------+----------------+----------------|
  | contest_1 | candidate      | Mayor of Orbit City      | office_1       | n-of-m         |
  | contest_2 | candidate      | Control Board Member     | office_group_1 | n-of-m         |
  | contest_3 | ballot_measure | Gadget County Question 1 | county_15      | approval       |


  Fred uses Versa to record information about the candidates (their
  names, their parties, and other administrative details) and about
  the ballot question.
  
  | id         | name             | party  |
  |------------+------------------+--------|
  | candidate1 | Cosmo Spacely    | Lepton |
  | candidate2 | Spencer Cogswell | Hadron |
  | candidate3 | Jane Jetson      | Lepton |
  | candidate4 | Harlan Ellis     | Lepton |
  | candidate5 | Rudi Indexer     | Hadron |

  
  Versa's APIs can be used by various election tools.  For example, a
  mobile ballot-marking app might request an election definition for a
  voter's precinct; Versa might return something like this:

  #+begin_src xml
    <?xml version="1.0" encoding="UTF-8"?>
    <ElectionReport xmlns="NIST_V1_election_results.xsd"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="NIST_V1_election_results.xsd schemas/ElectionReport.xsd">
        <Election>
            <BallotStyleCollection>
                <BallotStyle objectId="ballot_style_1">

                    <GpUnitIds>spacetown-precinct</GpUnitIds>

                    <OrderedContest>
                        <ContestId> contest-mayor-orbit-city</ContestId>
                    </OrderedContest>

                    <OrderedContest>
                        <ContestId>contest-control-board-spaceport</ContestId>
                    </OrderedContest>
                    <OrderedContest>
                        <ContestId>contest-ballot-measure-gadget-county-1</ContestId>
                    </OrderedContest>
                </BallotStyle>
            </BallotStyleCollection>
            <CandidateCollection>
                <Candidate objectId="candidate-cosmo-spacely">
                    <BallotName>
                        <Text language="en">Cosmo Spacely</Text>
                    </BallotName>
                </Candidate>
                <Candidate objectId="candidate-spencer-cogswell">
                    <BallotName>
                        <Text language="en">Spencer Cogswell</Text>
                    </BallotName>
                </Candidate>
                <Candidate objectId="candidate-jane-jetson">
                    <BallotName>
                        <Text language="en">Jane Jetson</Text>
                    </BallotName>
                </Candidate>
                <Candidate objectId="candidate-harlan-ellis">
                    <BallotName>
                        <Text language="en">Harlan Ellis</Text>
                    </BallotName>
                </Candidate>
                <Candidate objectId="candidate-rudi-indexer">
                    <BallotName>
                        <Text language="en">Rudi Indexer</Text>
                    </BallotName>
                </Candidate>
                <Candidate objectId="candidate-write-in-for-mayor">
                    <BallotName>
                        <Text language="en">write-in</Text>
                    </BallotName>
                </Candidate>
            </CandidateCollection>
            <ContestCollection>
                <Contest xsi:type="CandidateContest" objectId="contest-mayor-orbit-city">
                    <BallotSelection xsi:type="CandidateSelection" objectId="cs1">
                        <SequenceOrder>1</SequenceOrder>
                        <CandidateIds>candidate-cosmo-spacely</CandidateIds>
                    </BallotSelection>
                    <BallotSelection xsi:type="CandidateSelection"
                        objectId="contest-mayor--selection-cosmo-spacely">
                        <SequenceOrder>1</SequenceOrder>
                        <CandidateIds>candidate-cosmo-spacely</CandidateIds>
                    </BallotSelection>
                    <BallotSelection xsi:type="CandidateSelection"
                        objectId="contest-mayor--selection-spencer-cogswell">
                        <SequenceOrder>2</SequenceOrder>
                        <CandidateIds>candidate-spencer-cogswell</CandidateIds>
                    </BallotSelection>
                    <BallotSelection xsi:type="CandidateSelection"
                        objectId="contest-mayor--selection-write-in">
                        <SequenceOrder>3</SequenceOrder>
                        <CandidateIds>candidate-write-in-for-mayor</CandidateIds>
                        <IsWriteIn>true</IsWriteIn>
                    </BallotSelection>

                    <BallotTitle>
                        <Text language="en">Mayor of Orbit City</Text>
                    </BallotTitle>

                    <ElectoralDistrictId>gadget-county</ElectoralDistrictId>
                    <Name>Mayor of Orbit City</Name>
                    <VoteVariation>plurality</VoteVariation>
                    <OfficeIds>mayor-orbit-city</OfficeIds>
                    <VotesAllowed>1</VotesAllowed>
                </Contest>
                <Contest xsi:type="CandidateContest" objectId="contest-control-board-spaceport">
                    <BallotSelection xsi:type="CandidateSelection"
                        objectId="contest-control-board-spaceport--selection-jane-jetson">
                        <SequenceOrder>1</SequenceOrder>
                        <CandidateIds>candidate-jane-jetson</CandidateIds>
                    </BallotSelection>
                    <BallotSelection xsi:type="CandidateSelection"
                        objectId="contest-control-board-spaceport--selection-harlan-ellis">
                        <SequenceOrder>2</SequenceOrder>
                        <CandidateIds>candidate-harlan-ellis</CandidateIds>
                    </BallotSelection>
                    <BallotSelection xsi:type="CandidateSelection"
                        objectId="contest-control-board-spaceport--selection-rudi-indexer">
                        <SequenceOrder>3</SequenceOrder>
                        <CandidateIds>candidate-rudi-indexer</CandidateIds>
                    </BallotSelection>
                    <BallotSelection xsi:type="CandidateSelection"
                        objectId="contest-control-board-spaceport--selection-write-in-1">
                        <SequenceOrder>4</SequenceOrder>
                        <CandidateIds>
                            contest-control-board-spaceport--selection-write-in-1</CandidateIds>
                        <IsWriteIn>true</IsWriteIn>
                    </BallotSelection>
                    <BallotSelection xsi:type="CandidateSelection"
                        objectId="contest-control-board-spaceport--selection-write-in-2">
                        <SequenceOrder>5</SequenceOrder>
                        <CandidateIds>
                            contest-control-board-spaceport--selection-write-in-2</CandidateIds>
                        <IsWriteIn>true</IsWriteIn>
                    </BallotSelection>
                    <ElectoralDistrictId>gadget-county</ElectoralDistrictId>
                    <Name>Spaceport Control Board</Name>
                    <VoteVariation>n-of-m</VoteVariation>
                    <VotesAllowed>2</VotesAllowed>
                </Contest>
                <Contest xsi:type="BallotMeasureContest"
                    objectId="contest-ballot-measure-gadget-county-1">
                    <ElectoralDistrictId>gadget-county</ElectoralDistrictId>
                    <Name>Gadget County Sales Tax Increase</Name>
                    <FullText>
                        <Text language="en">Shall Gadget County increase its sales tax from 1% to 1.1% for the purpose of raising additional revenue to fund expanded air traffic control operations?</Text>
                    </FullText>
                </Contest>
            </ContestCollection>
            <ElectionScopeId>gadget-county</ElectionScopeId>
            <Name>
                <Text language="en">Gadget County Elections</Text>
            </Name>
            <StartDate>2021-06-01</StartDate>
            <EndDate>2021-06-15</EndDate>
            <Type>general</Type>
        </Election>
        <Format>summary-contest</Format>
        <GeneratedDate>2021-06-01T12:00:00-08:00</GeneratedDate>
        <GpUnitCollection>
            <GpUnit xsi:type="ReportingUnit" objectId="gadget-county">
                <Name>
                    Gadget County
                </Name>
                <Type>county</Type>
            </GpUnit>
            <GpUnit xsi:type="ReportingUnit" objectId="spacetown-precinct">
                <Name>
                    SpaceTown Precinct
                </Name>
                <Type>precinct</Type>
            </GpUnit>
            <GpUnit xsi:type="ReportingDevice" objectId="ballot-marker-1">
                <Device>
                    <Manufacturer>Trust the Vote</Manufacturer>
                    <Model>git-c3cd6f4f-20210601</Model>
                </Device>
                <SerialNumber>AB:CD:EF:12:34:56</SerialNumber>
            </GpUnit>
        </GpUnitCollection>
        <Issuer>State</Issuer>
        <IssuerAbbreviation>US</IssuerAbbreviation>
        <OfficeCollection>
            <Office objectId="mayor-orbit-city">
                <Name>
                    <Text language="en">Mayor of Orbit City</Text>
                </Name>
            </Office>
        </OfficeCollection>

        <SequenceStart>1</SequenceStart>
        <SequenceEnd>1</SequenceEnd>
        <Status>pre-election</Status>
        <VendorApplicationId>TTV</VendorApplicationId>
    </ElectionReport>
  #+end_src

  
  The mobile app would parse this standard data structure and use the
  data to present a ballot to the voter.  We don't know how the mobile
  app keeps track of data while it's running, of course; but let's
  imagine that it is written in Typescript.  The app's internal
  representation of the data might look something like this:

  #+begin_src js
    class CandidateContestSelection {
        contestId: string;
        selectedCandidateId: string;
    }

    class BallotContestSelection {
        contestId: string;
        selection: boolean;
    }

    const selection_for_mayor = new CandidateContestSelection();
    selection_for_mayor.contestId = "contest_1";
    selection_for_mayor.selectedCandidateId = "candidate_1";

    const selection_for_council_1 = new CandidateContestSelection();
    selection_for_council_1.contestId = "contest_2";
    selection_for_council_1.selectedCandidateId = "candidate_3";

    const selection_for_council_2 = new CandidateContestSelection();
    selection_for_council_2.contestId = "contest_3";
    selection_for_council_2.selectedCandidateId = "candidate_4";

    const ballot_measure_choice = new BallotContestSelection();
    ballot_measure_choice.contestId = "contest_3";
    ballot_measure_choice.selection = true;
  #+end_src

  When sending the voter's choices to be recorded, the app uses the
  NIST 1500-103 cast-vote-record standard, so it translates its
  internal structures into something like this:

  #+begin_src json
    // JSON expression of voter choices in CVR format
  #+end_src

  The CVR format contains all the contextual information from the EDF,
  so the mobile app must output that information too, as part of the
  CVR report:

  #+begin_src json
    // full CVR report in JSON
  #+end_src
